name: Build Distributables of PyDEILabs

on:
  push:
    tags:
      - 'v*'  # Trigger on tags following semantic versioning (e.g., v1.0, v2.0.1)
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]  # Exclude Linux by omitting it from the matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build with PyInstaller for Windows
        if: matrix.os == 'windows-latest'
        run: pyinstaller pydeilabs-win.spec  # Use the Windows-specific .spec file

      - name: Build with PyInstaller for macOS
        if: matrix.os == 'macos-latest'
        run: pyinstaller pydeilabs-mac.spec  # Use the macOS-specific .spec file

      - name: Build with PyInstaller for macOS
        if: matrix.os == 'ubuntu-latest'
        run: pyinstaller pydeilabs-linux.spec  # Use the linux-specific .spec file

      - name: Create DMG for macOS
        if: matrix.os == 'macos-latest'
        run: |
          # Install create-dmg tool
          brew install create-dmg
          # Create the .dmg file around the .app
          create-dmg \
          --volname "PyDeiLabs Installer" \
          --volicon "deilabs.icns" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "pydeilabs.app" 200 190 \
          --hide-extension "pydeilabs.app" \
          --app-drop-link 600 185 \
          "dist/pydeilabs.dmg" \
          "dist/pydeilabs.app"

      - name: Archive build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: pydeilabs-${{ runner.os }}-${{ github.ref_name }}
          path: |
            dist/pydeilabs*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: pydeilabs-Windows-${{ github.ref_name }}
          path: ./artifacts

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: pydeilabs-macOS-${{ github.ref_name }}
          path: ./artifacts

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: pydeilabs-Linux-${{ github.ref_name }}
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/*